from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score
import numpy as np

# Sample binary classification dataset
X = np.array([
    [1, 10],
    [2, 20],
    [3, 30],
    [4, 10],
    [5, 50],
    [6, 60]
])
y = np.array([0, 0, 0, 1, 1, 1])  # Labels

# Split data into train and test
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.33, random_state=42
)

# Train Logistic Regression model
model = LogisticRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)

# Evaluate with safe zero_division handling
print("Accuracy:", accuracy_score(y_test, y_pred))
print("Precision:", precision_score(y_test, y_pred, zero_division=1))
print("Recall:", recall_score(y_test, y_pred, zero_division=1))
print("F1 Score:", f1_score(y_test, y_pred, zero_division=1))

output:
Accuracy: 1.0
Precision: 1.0
Recall: 1.0
F1 Score: 1.0
